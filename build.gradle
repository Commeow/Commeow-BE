plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.0'
	id 'io.spring.dependency-management' version '1.1.0'
}

subprojects {
	apply plugin: 'java-library'
	apply plugin: 'idea'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'
	apply plugin: 'jacoco'

	group 'org.example'
	version '1.0-SNAPSHOT'

	java {
		sourceCompatibility = JavaVersion.VERSION_17
		targetCompatibility = JavaVersion.VERSION_17
	}

	compileJava {
		options.encoding = 'UTF-8'
		options.compilerArgs.addAll(['--release', '17'])
	}

	repositories {
		mavenCentral()
	}

	jacoco {
		toolVersion = "0.8.8"
	}

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-webflux'
		developmentOnly 'org.springframework.boot:spring-boot-devtools'
		annotationProcessor 'org.projectlombok:lombok'
		compileOnly 'org.projectlombok:lombok'

		implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
		implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
		implementation 'io.jsonwebtoken:jjwt-api:0.11.1'

		runtimeOnly 'org.postgresql:r2dbc-postgresql'
		runtimeOnly 'org.postgresql:postgresql'
		runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.1', 'io.jsonwebtoken:jjwt-jackson:0.11.1'

		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testImplementation 'io.projectreactor:reactor-test'
		testImplementation 'org.mockito:mockito-junit-jupiter:3.12.4'
		testCompileOnly 'org.projectlombok:lombok'

		testImplementation 'org.springframework.boot:spring-boot-starter-webflux'
		testAnnotationProcessor 'org.projectlombok:lombok'
		testCompileOnly 'org.projectlombok:lombok'

		testImplementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
		testImplementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
		testImplementation 'junit:junit:4.13.1'

		testRuntimeOnly 'org.postgresql:r2dbc-postgresql'
		testRuntimeOnly 'org.postgresql:postgresql'
	}

	tasks.named('test') {
		useJUnitPlatform()
		finalizedBy jacocoTestReport
	}

	jacocoTestReport {
		dependsOn test // tast 실행 전에 수행될 task
		reports { // 어떤 파일을 생성할지/생성하지 않을지
			xml.enabled true
			html.enabled true
			csv.enabled false
		}
		finalizedBy jacocoTestCoverageVerification
	}

	jacocoTestCoverageVerification {
		violationRules {
			rule {
				element = 'CLASS'
				enabled = true

				limit {
					counter = 'LINE'
					value = 'COVEREDRATIO'
//                    minimum = 0.0
				}
			}
		}
	}
}

project(':ContentService'){
	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-rsocket'
		implementation 'org.springframework.boot:spring-boot-starter-security'

		testImplementation 'org.springframework.security:spring-security-test'
		testImplementation 'org.springframework.boot:spring-boot-starter-security'
		testImplementation 'org.springframework.security:spring-security-oauth2-jose'
		testRuntimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.1', 'io.jsonwebtoken:jjwt-jackson:0.11.1'
		testImplementation 'io.jsonwebtoken:jjwt-api:0.11.1'
	}
}

project(':StreamingService'){
	dependencies {
	}
}

project(':TranscodingService'){
	dependencies {
	}
}